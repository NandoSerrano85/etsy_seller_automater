services:
  # Database Service
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: etsydb
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - printer-automater-network

  # Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: printer-automater-backend
    ports:
      - "3003:3003"
    environment:
      - HOST=0.0.0.0
      - PORT=3003
      - DEBUG=false
      - DOCKER_ENV=true
      - FRONTEND_URL=http://localhost:3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/etsydb
    env_file:
      - .env
    volumes:
      # Mount the .env file for persistent configuration
      - ./.env:/app/.env:ro
      # Mount local images directory if needed
      - ./server/images:/app/server/images
      - /Users/fserrano/Desktop/Desktop/NookTransfers/Mockups/Cup Wraps/:/Users/fserrano/Desktop/Desktop/NookTransfers/Mockups/Cup Wraps/
      - /Users/fserrano/Desktop/Desktop/NookTransfers/UVDTF 16oz/:/Users/fserrano/Desktop/Desktop/NookTransfers/UVDTF 16oz/
      - /Users/fserrano/Desktop/Desktop/NookTransfers/:/Users/fserrano/Desktop/Desktop/NookTransfers/
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3003/api/ping"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    networks:
      - printer-automater-network
    depends_on:
      - db

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: printer-automater-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:3003
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      # Mount source code for development (hot reload)
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - /app/node_modules
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - printer-automater-network

networks:
  printer-automater-network:
    driver: bridge

volumes:
  node_modules:
  pgdata: 